# Generated by Django 5.1.3 on 2024-12-18 15:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Уникальное имя для шаблона письма.', max_length=100, unique=True, verbose_name='Имя шаблона')),
                ('subject', models.CharField(help_text='Тема письма.', max_length=255, verbose_name='Тема')),
                ('body', models.TextField(help_text='HTML содержимое письма.', verbose_name='Тело')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
            ],
            options={
                'verbose_name': 'Email Template',
                'verbose_name_plural': 'Email Templates',
                'db_table': 'email_template',
            },
        ),
        migrations.CreateModel(
            name='EmailUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, help_text='Имя пользователя.', max_length=100, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, help_text='Фамилия пользователя.', max_length=100, null=True, verbose_name='Фамилия')),
                ('email', models.EmailField(help_text='Email адрес пользователя.', max_length=254, unique=True, verbose_name='Email')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
            ],
            options={
                'verbose_name': 'Email User',
                'verbose_name_plural': 'Email Users',
                'db_table': 'email_user',
            },
        ),
        migrations.CreateModel(
            name='SMTPProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Имя SMTP профиля.', max_length=100, verbose_name='Имя профиля')),
                ('host', models.CharField(help_text='SMTP хост.', max_length=255, verbose_name='Хост')),
                ('port', models.PositiveIntegerField(help_text='SMTP порт.', verbose_name='Порт')),
                ('username', models.CharField(help_text='SMTP имя пользователя.', max_length=255, verbose_name='Имя пользователя')),
                ('password', models.CharField(help_text='SMTP пароль.', max_length=255, verbose_name='Пароль')),
                ('use_tls', models.BooleanField(default=False, help_text='Использовать TLS для соединения.', verbose_name='Использовать TLS')),
                ('use_ssl', models.BooleanField(default=False, help_text='Использовать SSL для соединения.', verbose_name='Использовать SSL')),
                ('default', models.BooleanField(default=False, verbose_name='По умолчанию')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
            ],
            options={
                'verbose_name': 'SMTP Profile',
                'verbose_name_plural': 'SMTP Profiles',
                'db_table': 'smtp_profile',
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_email', models.EmailField(help_text='Email адрес получателя.', max_length=254, verbose_name='Получатель')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed')], default='pending', help_text='Статус письма.', max_length=10, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('sent_at', models.DateTimeField(blank=True, help_text='Время отправки письма.', null=True, verbose_name='Отправлено')),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mailer.emailtemplate', verbose_name='Шаблон письма')),
            ],
            options={
                'verbose_name': 'Email',
                'verbose_name_plural': 'Emails',
                'db_table': 'email',
            },
        ),
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Имя группы пользователей.', max_length=100, verbose_name='Имя кластера')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('users', models.ManyToManyField(help_text='Список пользователей в группе.', to='mailer.emailuser', verbose_name='Пользователи')),
            ],
            options={
                'verbose_name': 'Cluster',
                'verbose_name_plural': 'Clusters',
                'db_table': 'cluster',
            },
        ),
        migrations.CreateModel(
            name='ScheduledEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_time', models.DateTimeField(help_text='Время, когда письмо должно быть отправлено.', verbose_name='Запланированное время')),
                ('is_sent', models.BooleanField(default=False, help_text='Было ли письмо отправлено.', verbose_name='Отправлено')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('cluster', models.ForeignKey(blank=True, help_text='Кластер пользователей, связанный с письмом.', null=True, on_delete=django.db.models.deletion.CASCADE, to='mailer.cluster', verbose_name='Кластер')),
                ('email_template', models.ForeignKey(help_text='Шаблон для использования в запланированном письме.', on_delete=django.db.models.deletion.CASCADE, to='mailer.emailtemplate', verbose_name='Шаблон письма')),
                ('user_profile', models.ForeignKey(blank=True, help_text='Профиль пользователя, связанный с письмом.', null=True, on_delete=django.db.models.deletion.CASCADE, to='mailer.emailuser', verbose_name='Профиль пользователя')),
            ],
            options={
                'verbose_name': 'Scheduled Email',
                'verbose_name_plural': 'Scheduled Emails',
                'db_table': 'scheduled_email',
            },
        ),
    ]
